- hosts: localhost
  gather_facts: true
  tasks:
  - name: setup_bastion_host | Check OCP Ansible Playbooks exist
    stat: path=/usr/share/ansible/openshift-ansible
    register: check_ocp_playbooks
  - name: setup_bastion_host | Register host and subscribe
    redhat_subscription:
      state: present
      username: "{{rhn_user}}"
      password: "{{rhn_password}}"
      pool: "{{rhn_pool_id}}"
    when: check_ocp_playbooks.stat.exists == false
  - name: setup_bastion_host | Disable all repos
    shell: subscription-manager repos --disable="*"
    when: check_ocp_playbooks.stat.exists == false
  - name: setup_bastion_host | Enable OCP and RHSCL repos (needed for Fedora)
    shell: subscription-manager repos --enable="rhel-7-server-rpms" --enable="rhel-7-server-extras-rpms" --enable="rhel-7-server-ose-3.9-rpms" --enable="rhel-7-fast-datapath-rpms" --enable="rhel-7-server-ansible-2.4-rpms" --enable="rhel-server-rhscl-7-rpms" --enable="rh-gluster-3-for-rhel-7-server-rpms"
    when: check_ocp_playbooks.stat.exists == false
  - name: setup_bastion_host | Install EPEL repos
    yum:
      name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
      state: present
    when: check_ocp_playbooks.stat.exists == false
  - name: setup_bastion_host | Install deltarpm
    yum:
      name: deltarpm
    when: check_ocp_playbooks.stat.exists == false
  - name: setup_bastion_host | Install rpms
    yum:
      name="{{ item }}"
      state=latest
    with_items:
    - wget
    - git
    - net-tools
    - bind-utils
    - iptables-services
    - bridge-utils
    - bash-completion
    - kexec-tools
    - sos
    - psacct
    - python-virtualenv
    - gcc
    - atomic-openshift-utils
    - atomic-openshift-excluder
    - atomic-openshift-clients
    - atomic-openshift
    - rh-python35
    - cns-deploy
    - heketi-client
    when: check_ocp_playbooks.stat.exists == false
  - name: setup_bastion_host | Disable GlusterFS repo
    shell: subscription-manager repos --disable="rh-gluster-3-for-rhel-7-server-rpms"
    when: check_ocp_playbooks.stat.exists == false
  - name: setup_ssh | Generate SSH keys
    shell: ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
    args:
      creates: /root/.ssh/id_rsa.*
  - name: configure_hosts | Configure /etc/hosts
    lineinfile: dest=/etc/hosts line="{{ hostvars[item]['ansible_host'] }} {{ hostvars[item]['inventory_hostname'] }}"
    with_items: "{{groups.all}}"
  - name: configure_docker | Start Docker
    systemd:
      name: docker
      state: started
